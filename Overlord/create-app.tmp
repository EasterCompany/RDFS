#! /usr/bin/python3
import sys
import atexit
import shutil
import getpass
import subprocess
from os import system as s, getcwd as _cwd, remove as rm, chdir
from os.path import exists

cpv = True if sys.version_info[1] >= 10 else False
cwd=_cwd()
n=None
install_success = False


def cmd(command, path=cwd):
  return subprocess.run(
    command,
    shell=True,
    cwd=path,
    capture_output=True,
    encoding='utf-8'
  )


def cleanup():
  global install_success
  try:
    if n is not None and not install_success:
      if exists(f"{cwd}/{n}"):
        shutil.rmtree(f"{cwd}/{n}")
    rm(__file__)
  except Exception:
    pass


atexit.register(cleanup)


try:
  s("clear")

  # Create project name
  print("\nWelcome to the Overlord Installer!\n")
  n=input("Project Name: ")
  print(f"\n> Creating Project: {n} @ {cwd}")

  # Download Overlord from `Prd` branch
  print("  \33[5;33m🔶\33[0m Downloading Overlord     ", end="\r")
  try:
    s(f"git clone --quiet --single-branch --branch Prd --depth=1 git@github.com:EasterCompany/Overlord.git {n}")
  except Exception as download_error:
    print(f"\n\n{download_error}\n\n"), rm(__file__), exit()
  print("  \33[1;32m✅ Successfully Downloaded  \33[0m")

  # Remove development artifacts
  print(f"\n> Installing Project: {n} @ {cwd}")
  print(f"  \33[5;33m🔶\33[0m Cleaning Source Code", end="\r")
  chdir(f"{cwd}/{n}")
  shutil.rmtree("./.git")
  rm("./README.md")
  rm("./SECURITY.md")
  print(f"  \33[1;32m✅ Successfully Cleaned Source Code \33[0m")

  # Exit & instruct manual installation if Python is less than 3.10
  if not cpv:
    print(f"""
  ************************* ATTENTION *************************

  Overlord only supports Python 3.10 or greater and
  it looks like your system default at '/usr/bin/python3'
  is running on version '{sys.version_info[0]}.{sys.version_info[1]}'

  Unfortunately until this is fixed you'll need to install your
  Overlord application manually.

  You need to run this command from within your app directory:

  >> python3.10 core.py tools install

  you can replace 'python3.10' with whatever version you wish
  to use as long as it's a greater version

  We highly recommend Python 3.11 for it's huge performance
  benefits. Although this might not be available for you yet.

     You can get the latest version from the following link:
                https://www.python.org/downloads/

  *************************************************************
  """)
    install_success = True
    exit()

  # Check if pip is available
  pip_status = cmd(f"{sys.executable} -m pip")
  if "No module named pip" in str(pip_status.stderr):

    print("\n> Root Access Required to Install Dependencies")
    sudo_pass = getpass.getpass("  [sudo] Enter Password: ")

    print("\n> Installing Package Installer for Python (PIP)")
    print("  \33[5;33m🔶\33[0m Downloading & Installing", end="\r")
    cmd_status = cmd(f"echo {sudo_pass} | sudo -S apt-get install -y python3-pip")
    pip_status = cmd(f"{sys.executable} -m pip")

    if "No module named pip" not in str(pip_status.stderr):
      print("  \33[1;32m✅ Successfully Installed          \33[0m")
    else:
      print("  \33[1;31m⚠️ Failed to Install               \33[0m\n")
      print(
        "  \33[1;31m[ERROR]"
        "  The installer failed to acquire `python3-pip` you will need to\n"
        "  manually install pip for your python installation.\n"
        "  on most systems this can be done by running:\n\n"
        "  >> sudo apt-get install python3-pip\n\n"
        "  Once you have installed pip run the `create-app` command again.\33[0m\n"
      )
      exit()

  else:
    print("  \33[1;32m✅ Python3-pip is Installed \33[0m\n")

  p_dir = f"{cwd}/{n}"
  install_success = True

  print("> Installing Overlord Requirements")
  print("  \33[5;33m🔶\33[0m Downloading & Installing", end="\r")
  cmd(f"{sys.executable} -m pip install --no-warn-script-location -r ./core/requirements.txt", cwd=p_dir)
  print("  \33[1;32m✅ Successfully Installed          \33[0m")

  print("\n> Installing Overlord Dev Requirements")
  print("  \33[5;33m🔶\33[0m Downloading & Installing", end="\r")
  cmd(f"{sys.executable} -m pip install --no-warn-script-location -r ./core/requirements.dev", cwd=p_dir)
  print("  \33[1;32m✅ Successfully Installed          \33[0m")

  print("\n> Installing Overlord")
  print("  \33[5;33m🔶\33[0m Installing", end="\r")
  cmd(f"{sys.executable} core.py tools install", cwd=p_dir)

  if exists(f"{cwd}/{n}/o"):
    print("  \33[1;32m✅ Successfully Installed          \33[0m")
    print(f"  \33[1;32m✅ Your Project Was Setup Successfully   \n      @ {p_dir}\33[0m\n")
    print(
      f"  Enter the directory using \33[33mcd {n}\33[0m and then\n"
      "  Use the \33[33m./o\33[0m command to open the Overlord-CLI\n"
    )

  elif exists(f"{cwd}/{n}"):
    print(f"  \33[1;31m⚠️ Your Project Cannot be Installed    \n      @ {p_dir}\33[0m\n")
    print(
      f"     Enter the directory using 'cd {n}' and then run:\n\n"
      "     >> python3 core.py tools install\n\n"
      "     to complete the installation process.\n"
    )

except Exception as error:
  print("\n\nSorry, an unexpected fatal error was encountered.\nAborting Installation process...\n\n")
  print(error)
  print('\n\n')
  cleanup()

cleanup()
